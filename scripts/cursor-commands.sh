#!/bin/bash

# Comandos r치pidos para o Cursor

# Fun칞칚o para mostrar ajuda
function show_help {
  echo "Comandos dispon칤veis:"
  echo "  cursor:test       - Executa testes unit치rios"
  echo "  cursor:test:int   - Executa testes de integra칞칚o"
  echo "  cursor:test:all   - Executa todos os testes"
  echo "  cursor:validate   - Valida arquivos de configura칞칚o"
  echo "  cursor:convert    - Converte arquivos de configura칞칚o para snake_case"
  echo "  cursor:analyze    - Analisa complexidade do c칩digo"
  echo "  cursor:coverage   - Gera relat칩rio de cobertura de testes"
  echo "  cursor:help       - Mostra esta ajuda"
}

# Fun칞칚o para executar testes unit치rios
function run_unit_tests {
  echo "游빍 Executando testes unit치rios..."
  npm run test:unit
}

# Fun칞칚o para executar testes de integra칞칚o
function run_integration_tests {
  echo "游빍 Executando testes de integra칞칚o..."
  npm run test:integration
}

# Fun칞칚o para executar todos os testes
function run_all_tests {
  echo "游빍 Executando todos os testes..."
  npm test
}

# Fun칞칚o para validar configura칞칫es
function validate_configs {
  echo "游댌 Validando arquivos de configura칞칚o..."
  npm run config:validate
}

# Fun칞칚o para converter configura칞칫es
function convert_configs {
  echo "游댃 Convertendo arquivos de configura칞칚o para snake_case..."
  npm run config:convert
}

# Fun칞칚o para analisar complexidade
function analyze_complexity {
  echo "游늵 Analisando complexidade do c칩digo..."
  npx ts-complexity-analysis src/
}

# Fun칞칚o para gerar relat칩rio de cobertura
function generate_coverage {
  echo "游닇 Gerando relat칩rio de cobertura de testes..."
  npm test -- --coverage
}

# Processar comando
case "$1" in
  "cursor:test")
    run_unit_tests
    ;;
  "cursor:test:int")
    run_integration_tests
    ;;
  "cursor:test:all")
    run_all_tests
    ;;
  "cursor:validate")
    validate_configs
    ;;
  "cursor:convert")
    convert_configs
    ;;
  "cursor:analyze")
    analyze_complexity
    ;;
  "cursor:coverage")
    generate_coverage
    ;;
  "cursor:help" | *)
    show_help
    ;;
esac
